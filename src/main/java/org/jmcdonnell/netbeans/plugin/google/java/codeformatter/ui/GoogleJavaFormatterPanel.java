/*
 * Copyright 2019 John McDonnell.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jmcdonnell.netbeans.plugin.google.java.codeformatter.ui;

import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.net.MalformedURLException;
import java.net.URL;
import org.netbeans.api.project.Project;
import org.netbeans.spi.project.AuxiliaryProperties;
import org.netbeans.spi.project.ui.support.ProjectCustomizer.Category;
import org.openide.awt.HtmlBrowser;
import org.openide.util.Exceptions;

/**
 *
 * @author John McDonnell
 */
public class GoogleJavaFormatterPanel extends javax.swing.JPanel {
    
    private final AuxiliaryProperties auxiliaryProperties;
    

    GoogleJavaFormatterPanel(Category category, Project project) {
        initComponents();
        
        auxiliaryProperties = project.getLookup().lookup(AuxiliaryProperties.class);
        
        String isGoogleJavaCodeFormatterEnabled = auxiliaryProperties.get("isGoogleJavaCodeFormatterEnabled", true);
        chkEnableGoogleStyleFormatter.setSelected(Boolean.parseBoolean(isGoogleJavaCodeFormatterEnabled));

        btnHyperlinkToStyleGuide.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btnHyperlinkToStyleGuide.addActionListener((ActionEvent e) -> {
            try {
                HtmlBrowser.URLDisplayer.getDefault().showURL(new URL("https://google.github.io/styleguide/javaguide.html"));
            } catch (MalformedURLException ex) {
                Exceptions.printStackTrace(ex);
            }
        });       
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        chkEnableGoogleStyleFormatter = new javax.swing.JCheckBox();
        btnHyperlinkToStyleGuide = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(chkEnableGoogleStyleFormatter, org.openide.util.NbBundle.getMessage(GoogleJavaFormatterPanel.class, "GoogleJavaFormatterPanel.chkEnableGoogleStyleFormatter.text")); // NOI18N
        chkEnableGoogleStyleFormatter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkEnableGoogleStyleFormatterActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        add(chkEnableGoogleStyleFormatter, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(btnHyperlinkToStyleGuide, org.openide.util.NbBundle.getMessage(GoogleJavaFormatterPanel.class, "GoogleJavaFormatterPanel.btnHyperlinkToStyleGuide.text")); // NOI18N
        btnHyperlinkToStyleGuide.setBorderPainted(false);
        btnHyperlinkToStyleGuide.setContentAreaFilled(false);
        btnHyperlinkToStyleGuide.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        add(btnHyperlinkToStyleGuide, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void chkEnableGoogleStyleFormatterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkEnableGoogleStyleFormatterActionPerformed
        auxiliaryProperties.put("isGoogleJavaCodeFormatterEnabled", chkEnableGoogleStyleFormatter.isSelected() ? "true" : "false", true);
    }//GEN-LAST:event_chkEnableGoogleStyleFormatterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHyperlinkToStyleGuide;
    private javax.swing.JCheckBox chkEnableGoogleStyleFormatter;
    // End of variables declaration//GEN-END:variables
}
